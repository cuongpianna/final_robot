export default {
    route: {
        dashboard: 'Dashboard',
        systemManagement: 'System Management',
        userManagement: 'User Management',
        createUser: 'Create User',
        roleManagement: 'Role Management',
        createRole: 'Create Role',
        moduleManagement: 'Module Management',
        editRole: 'Edit Role',
        editModule: 'Edit Module',
        editUser: 'Edit User',
        doctorManagement: 'Doctor Management',
        robotManagement: 'Robot Management',
        areaManagement: 'Area Management',
        CameraManagement: 'Camera Management',
        RobotVersionManagement: 'Robot Version',
        Setting: 'Setting',
        trackingCamera: 'Tracking Camera',
        RobotControl: 'Robot Controlling'
    },
    dashboard: {
        hello: 'Hello',
        searchText: 'Search function',
        logout: 'Logout',
        setting: 'Setting',
        choseColor: 'Chose color',
        imageLibrary: 'Or chose image from library',
        uploadImage: 'Or click here to up load image',
        choseCity: 'Chose city',
        title: 'Robot monitoring and control system',
        robotControl: 'Controlling',
        videoCall: 'Video call'
    },
    role: {
        roleManagement: 'Role Management',
        createRole: 'Create role',
        editRole: 'Edit role',
        roleName: 'Role Name',
        activityStatus: 'Activity Status',
        reset: 'Reset',
        search: 'Search',
        stt: 'No',
        numberOfAccount: 'Users Count',
        createdBy: 'Created',
        role: 'Role',
        status: 'Status',
        actions: 'Actions',
        skip: 'Skip',
        save: 'Save',
        description: 'Description',
        roleInfo: 'Role Information',
        active: 'Active',
        deactive: 'Deactive',
        nameRequired: 'Role Name is required!',
        descriptionRequired: 'Description is required!',
        placeholder: 'Select',
        update: 'Edit',
        delete: 'Delete',
        permission: 'Permission',
        permissionForRole: 'Permission For Role'
    },
    module: {
        moduleManagement: 'Module Management',
        moduleName: 'Module Name',
        editModule: 'Edit Module',
        activityStatus: 'Activity Status',
        reset: 'Reset',
        search: 'Search',
        stt: 'No',
        description: 'Description',
        status: 'Status',
        actions: 'Actions',
        skip: 'Skip',
        save: 'Save',
        moduleInfo: 'Module information',
        functions: 'Functions',
        active: 'Active',
        deactive: 'Deactive',
        nameRequired: 'Module Name is required!',
        descriptionRequired: 'Description is required!',
        placeholder: 'Select'
    },

    usermanagement: {
        usermanagement: 'usermanagement',
        search: 'Search',
        create: 'Create user',
        clear: 'Clear',
        save: 'Save',
        close: 'Close',
        stt: '#',
        username: 'Username',
        fullname: 'Fullname',
        resetpassword: 'Reset password',
        password: 'Password',
        repassword: 'Confirm password',
        email: 'Email',
        status: 'Status',
        account_status: 'Account status',
        role: 'Role',
        update: 'Update user',
        delete: 'Delete user',
        usertype: 'Account type',
        isdelete: 'Is Deleted',
        selectRobot: 'Select robot',
        selectDoctor: 'Select doctor',

        info: 'User information',
        cancel: 'Cancel',
        avatar: 'Avatar',
        phone: 'Phone',
        address: 'Address Detail',
        user_management: 'User Management',
        editUser: 'Update User',
        createUser: 'Create User',

        active: 'Active',
        deactive: 'Deactive',
        working: 'Working',
        deleted: 'Deleted',

        usernameRequired: 'Username is required',
        nameRequired: 'Fullname is required',
        emailRequired: 'Email is required',
        emailError: 'Email is invalid!',
        phoneRequired: 'Phone number is required',
        phoneError: 'Phone number is invalid!',
        labelResetPassword: 'Reset password',
        passwordRequired: 'Password is required',
        passwordLength: 'Password length must be greater than 6',
        passwordConfirm: 'Confirm password does not match password',
        selectRole: 'Select role',
        addRobot: 'Add robot'
    },
    permissionMessage: {
        error: 'Access denied'
    },
    message: {
        success: 'Successful',
        successMessage: 'Data updated successfully',
        error: 'Error',
        errorMessage: 'Data updated failed!',
        permissionMessage: 'You need permission to do this action!',
        errorMessageLogin: 'Username or password is invalid',
        passwordLength: 'The password can not be less than 6 digits',
        errorMessageContract: 'The contract does not exist',
        errorMessageServerLogin: 'Error! Please contact to Administrator',
        errorMessagePricePolicy: 'Error! Surcharges is invalid',
        titleErrorPricePolicy: 'Notification',
        titleMessageDelete: 'Warning',
        textMessageDelete: 'Are you sure?',
        textBtnOk: 'Ok',
        textBtnCancel: 'Cancel',
        errorColor: 'Color is invalid',
        roomStatusUpdate: 'Are you sure?',
        warning: 'Warning'
    },
    login: {
        title: 'LOG IN',
        loginBtn: 'Log in',
        userName: 'User name',
        password: 'Password'
    },
    header: {
        search: 'Search',
        language: 'Change language',
        screenFull: 'Screen full',
        exitScreenFull: 'Exit screen full',
        fontsize: 'Change fontsize',
        setting: 'Setting'
    },
    doctor: {
        doctorManagement: 'Doctor management',
        create: 'Create doctor',
        doctorName: "Doctor's name",
        editDoctor: 'Edit doctor',
        createDoctor: 'Create doctor',
        education: 'Education',
        birthday: 'Birthday',
        position: 'Position',
        specialize: 'Specialize',
        description: 'Description',
        workat: 'Work at',
        phone: 'Phone',
        updateTooltip: 'Edit doctor',
        deleteTooltip: 'Delete doctor'
    },
    robot: {
        robotManagement: 'Robot Management',
        create: 'Create robot',
        robotName: 'Robot name',
        editRobot: 'Edit robot',
        createRobot: 'Create robot',
        info: 'Robot Information',
        code: 'Robot code',
        config:' Robot config',
        ip: 'IP Address',
        port: 'Port',
        robotStatus: 'Robot status',
        videoCallUrl: 'Video call url',
        selectAccount: 'Select account',
        setMap: 'Set area',
        updateTooltip: 'Edit Robot',
        deleteTooltip: 'Delete Robot',
        areaTitle: 'Area name',
        setAreaTitle: 'Set area',
        privateIp: 'Private IP',
        selectArea: 'Select area',
        area: 'Area',
        selectBigArea: 'Select area',
        selectChildArea: 'Select floor',
        privatePort: 'Private port',
        videoCallOnlineUrl: 'Online video call Url',
        selectVersion: 'Select version',
        workAt: 'Area',
        status: 'Status',
        working: 'Working',
        mediaManagement: 'Media management',
        robotControl: 'Robot Controlling',
        version: 'Robot version'
    },
    veeValidate: {
        username: 'Username',
        fullName: 'Fullname',
        phone: 'Phone',
        Address: 'Address',
        Position: 'Position',
        doctorName: "Doctor's name ",
        education: 'Education',
        specialize: 'Chuyên ngành',
        workat: 'Công tác',
        robotName: 'Tên robot',
        videoCallUrl: 'Video call url',
        cameraName: 'Camera name',
        areaName: 'Map name',
        versionName: 'Version name',
        cameraCode: 'Camera code',
        cameraPosition: 'Camera position'
    },
    area: {
        areaManagement: 'Area List',
        info:'Map information',
        create: 'Create map',
        areaName: 'Map name',
        thumb: 'Image',
        editArea: 'Edit Map',
        createArea: 'Create Map',
        description: 'Description',
        updateTooltip: 'Edit Map',
        deleteTooltip: 'Delete Map',
        selectArea: 'Select area',
        addCamera: 'Add Camera',
        editMap: 'Create map',
        area: 'Area',
        width: 'Width (m)',
        height: 'Height (m)',
        areaNo: 'Area No',
        statusRobot: 'Camera status',
        active: 'Active',
        deactive: 'Deactive'
    },
    camera: {
        cameraList: 'Camera List',
        create: 'Create camera',
        cameraName: 'Camera name',
        updateTooltip: 'Edit Camera',
        deleteTooltip: 'Delete Camera',
        createCamera: 'Create Camera',
        editCamera: 'Edit Camera',
        info: 'Camera Information',
        cameraIp: 'IP Address',
        addCamera: 'Add camera',
        close: 'Close',
        addCameraTitle: 'Add Camera',
        noCamera: 'No data available',
        code: 'Camera code',
        selectType: 'Camera type',
        position: 'Position'
    },
    robotVersion: {
        robotVersionList: 'Robot version list',
        create: 'Create',
        name: 'Version name',
        description: 'Description',
        editTitle: 'Edit title',
        createTitle: 'Create title',
        info: 'Version information',
        updateTooltip: 'Update version',
        deleteTooltip: 'Delete version'
    },
    setting: {
        settingManagement: 'System setting',
        onlineSetting: 'System is online?',
        Select: 'Select',
        hideVideo: 'Show/ hide control video',
        show: 'Show',
        hide: 'Hide'
    },
    createMap: {
        uploadImage: 'Upload image',
        proberty: 'Properties',
        saveObject: 'Add object',
        objectTitle: 'Object Title',
        saveSetting: 'Save Setting',
        addCamera: 'Add camera',
        cameraTitle: 'Camera name',
        objectList: 'Object list',
        currentRobot: 'Robot:',
        width: 'Width',
        height: 'Height',
        dragImage: 'Drag image',
        nameObjectRequired: 'Object name is required!'
    },
    robotControl: {
        robotCode: 'Robot No: ',
        robotName: 'Robot Name: ',
        room: 'Room '
    }
}
